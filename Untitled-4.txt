//L33

#include <iostream>
using namespace std ;

bool isSorted (int arr[] , int size) {

    //base case
    if (size ==0 || size==1) {
        return true ;
    }

    if (arr[0]>arr[1]) {
        return false;
    }
    else {
        bool remainingPart = isSorted(arr+1 , size-1);
        return remainingPart ;
     }
}


int getSum (int *arr , int size) {

    //base case
    if (size==0) {
        return 0;
    }
    if (size == 1) {
        return arr[0] ;
    }

    int remainingPart = getSum (arr+1 , size-1) ;
    int sum = arr[0] + remainingPart ;
    return sum;
}

int main () {

    int arr[5] = {2,4,6,81,9} ; 
    int size = 5 ;

    int sum = getSum(arr,size) ;
    cout << "Sum is " << sum << endl;

    bool ans = isSorted (arr,size) ;

    if (ans){
        cout << "Array is sorted." << endl;
    }
    else {
        cout << "Array is not sorted." << endl;
    }
    return 0;
}



//linear search
#include <iostream>
using namespace std ;

bool linearSearch (int arr[] , int size , int key) {

    //base case
    if (size==0) 
    return false;

    if (arr[0]==key) {
        return true ;
    }
    else {
        bool remainingPart = linearSearch (arr+1 , size-1 , key) ;
        return remainingPart ;
    }
}


int main () {

    int arr[5]= {3,5,1,2,6} ;
    int size = 5 ;
    int key = 8 ;
    bool ans = linearSearch(arr,size,key) ;

    if (ans) {
        cout << "present" << endl;
    }
    else {
        cout << "absent" << endl;
    }

    return 0;
}



//BINARY SEARCH
#include <iostream>
using namespace std ;

bool binarySearch (int arr, int s , int e , int k) {

    //base case
    if (s>e)
    return -1 ;

    int mid = s + (e-s)/2 ;

    if (arr[mid]==k)
    return true;


    if (arr[mid] < k) {
       return binarySearch (arr , mid+1 , e , k) ;
    }
    else {
        return binarySearch (arr , s , mid-1 , k);
    }
}

int main () {

    int arr[5] = {2,4,10,14,16} ;
    int size=6;
    int key=18;

    cout << "Present or not " << binarySearch(arr,0,5,18) ;


    return 0;
}