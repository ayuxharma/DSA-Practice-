//L10 

//Q1. SWAP ALTERNATE

/* #include <iostream>
using namespace std ;

void printArray (int arr[] , int n) {
    for ( int i=0; i<n; i++ ) {
        cout << arr[i] << " " ;
    }
}

void swapAlternate (int arr[] , int size) {

    for (int i=0; i<size ; i=i+2) {
        if(i+1 < size) {
            swap(arr[i] , arr[i+1]) ;
        }
    }
}

int main () {

     int even[8] = {5,2,9,4,7,6,1,0} ;
     int odd[5] = {11,33,9,76,43} ;

     swapAlternate (even , 8) ;
     printArray (even , 8) ;

     cout << endl; 

     swapAlternate (odd , 5) ;
     printArray (odd , 5) ;


     return 0 ;

 }
 */


 // SORT 0 , 1

 #include <iostream>
 using namespace std ;


 void printArray (int arr[] , int n) {
    for (int i=0; i<n; i++) {
        cout << arr[i] << " " ;
    }
 }

 void sortOne (int arr[] , int n ) {

    int left = 0 ;
    int right = n-1 ;

    while (left < right) {
        while (arr[left] == 0 && left < right) {
            left++ ;
        }
        while (arr[right] == 1 && left < right) {
            right-- ;
        }
        
        // agar yahan tk pahunch gye ho , iska matlab arr[left]==1 and arr[right]==0
        if (arr[left]==1 && arr[right]==0 && left < right) {

            swap (arr[left] , arr[right]) ;
            left ++ ;
            right -- ;
                    
        }
    }
 }

 int main () {

    int arr[8] = { 1,1,0,0,0,0,1,0} ;
    sortOne (arr , 8 );
    printArray (arr , 8 );
 }